---
AWSTemplateFormatVersion: 2010-09-09
Description: Batch environments and queues
Parameters:
  ProjectName:
    Description: Set the project name.
    Type: String
    Default: ssr
  IamStackName:
    Description: Set the IAM stack name.
    Type: String
    Default: s3-bucket-and-iam-resources
  VpcStackName:
    Description: Set the VPC stack name.
    Type: String
    Default: vpc-private-subnets-with-gateway-endpoints
  NumberOfAvailabilityZones:
    Description: Set the number of availability zones.
    Type: Number
    Default: 1
    AllowedValues:
      - 1
      - 2
      - 3
Conditions:
  UseAvailabilityZone1:
    Fn::Or:
      - Fn::Equals:
          - !Ref NumberOfAvailabilityZones
          - 2
      - !Condition UseAvailabilityZone2
  UseAvailabilityZone2:
    Fn::Equals:
      - !Ref NumberOfAvailabilityZones
      - 3
Resources:
  Ec2LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Sub ${ProjectName}-ec2-launch-template
      LaunchTemplateData:
        BlockDeviceMappings:
          - DeviceName: /dev/xvda
            Ebs:
              VolumeSize: 1000
              VolumeType: gp3
              Iops: 16000
              Throughput: 500
              Encrypted: true
              DeleteOnTermination: true
        InstanceInitiatedShutdownBehavior: terminate
      TagSpecifications:
        - ResourceType: launch-template
          Tags:
            - Key: Name
              Value: !Sub ${ProjectName}-ec2-launch-template
            - Key: ProjectName
              Value: !Ref ProjectName
  BatchComputeEnvironmentEc2IntelSpot:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      Type: MANAGED
      ComputeEnvironmentName: !Sub ${ProjectName}-batch-compute-environment-ec2-intel-spot
      ComputeResources:
        AllocationStrategy: SPOT_CAPACITY_OPTIMIZED
        BidPercentage: 100
        MinvCpus: 0
        MaxvCpus: 2048
        SecurityGroupIds:
          - Fn::ImportValue: !Sub ${AWS::Region}-${VpcStackName}-DefaultSecurityGroup
        Type: SPOT
        LaunchTemplate:
          LaunchTemplateId: !Ref Ec2LaunchTemplate
          Version: !GetAtt Ec2LaunchTemplate.LatestVersionNumber
        Subnets:
          Fn::If:
            - UseAvailabilityZone2
            - - Fn::ImportValue: !Sub ${AWS::Region}-${VpcStackName}-PrivateSubnet0
              - Fn::ImportValue: !Sub ${AWS::Region}-${VpcStackName}-PrivateSubnet1
              - Fn::ImportValue: !Sub ${AWS::Region}-${VpcStackName}-PrivateSubnet2
            - Fn::If:
                - UseAvailabilityZone1
                - - Fn::ImportValue: !Sub ${AWS::Region}-${VpcStackName}-PrivateSubnet0
                  - Fn::ImportValue: !Sub ${AWS::Region}-${VpcStackName}-PrivateSubnet1
                - - Fn::ImportValue: !Sub ${AWS::Region}-${VpcStackName}-PrivateSubnet0
        Ec2Configuration:
          - ImageType: ECS_AL2
        InstanceRole:
          Fn::ImportValue: !Sub ${AWS::Region}-${IamStackName}-BatchEc2IamInstanceProfileArn
        SpotIamFleetRole:
          Fn::ImportValue: !Sub ${AWS::Region}-${IamStackName}-BatchSpotFleetIamRoleArn
        InstanceTypes:
          - m6i
          - c6i
          - r6i
      ServiceRole:
        Fn::ImportValue: !Sub ${AWS::Region}-${IamStackName}-BatchServiceIamRoleArn
      State: ENABLED
      Tags:
        Name: !Sub ${ProjectName}-batch-compute-environment-ec2-intel-spot
        ProjectName: !Ref ProjectName
  BatchJobQueueEc2IntelSpot:
    Type: AWS::Batch::JobQueue
    Properties:
      JobQueueName: !Sub ${ProjectName}-batch-job-queue-ec2-intel-spot
      ComputeEnvironmentOrder:
        - Order: 1
          ComputeEnvironment: !Ref BatchComputeEnvironmentEc2IntelSpot
      Priority: 1
      State: ENABLED
      Tags:
        Name: !Sub ${ProjectName}-batch-job-queue-ec2-intel-spot
        ProjectName: !Ref ProjectName
  BatchComputeEnvironmentEc2IntelOnDemand:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      Type: MANAGED
      ComputeEnvironmentName: !Sub ${ProjectName}-batch-compute-environment-ec2-intel-ondemand
      ComputeResources:
        AllocationStrategy: BEST_FIT
        MinvCpus: 0
        MaxvCpus: 2048
        SecurityGroupIds:
          - Fn::ImportValue: !Sub ${AWS::Region}-${VpcStackName}-DefaultSecurityGroup
        Type: EC2
        LaunchTemplate:
          LaunchTemplateId: !Ref Ec2LaunchTemplate
          Version: !GetAtt Ec2LaunchTemplate.LatestVersionNumber
        Subnets:
          Fn::If:
            - UseAvailabilityZone2
            - - Fn::ImportValue: !Sub ${AWS::Region}-${VpcStackName}-PrivateSubnet0
              - Fn::ImportValue: !Sub ${AWS::Region}-${VpcStackName}-PrivateSubnet1
              - Fn::ImportValue: !Sub ${AWS::Region}-${VpcStackName}-PrivateSubnet2
            - Fn::If:
                - UseAvailabilityZone1
                - - Fn::ImportValue: !Sub ${AWS::Region}-${VpcStackName}-PrivateSubnet0
                  - Fn::ImportValue: !Sub ${AWS::Region}-${VpcStackName}-PrivateSubnet1
                - - Fn::ImportValue: !Sub ${AWS::Region}-${VpcStackName}-PrivateSubnet0
        Ec2Configuration:
          - ImageType: ECS_AL2
        InstanceRole:
          Fn::ImportValue: !Sub ${AWS::Region}-${IamStackName}-BatchEc2IamInstanceProfileArn
        InstanceTypes:
          - m6i
          - c6i
          - r6i
      ServiceRole:
        Fn::ImportValue: !Sub ${AWS::Region}-${IamStackName}-BatchServiceIamRoleArn
      State: ENABLED
      Tags:
        Name: !Sub ${ProjectName}-batch-compute-environment-ec2-intel-ondemand
        ProjectName: !Ref ProjectName
  BatchJobQueueEc2IntelOnDemand:
    Type: AWS::Batch::JobQueue
    Properties:
      JobQueueName: !Sub ${ProjectName}-batch-job-queue-ec2-intel-ondemand
      ComputeEnvironmentOrder:
        - Order: 1
          ComputeEnvironment: !Ref BatchComputeEnvironmentEc2IntelOnDemand
      Priority: 1
      State: ENABLED
      Tags:
        Name: !Sub ${ProjectName}-batch-job-queue-ec2-intel-ondemand
        ProjectName: !Ref ProjectName
  BatchLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/batch/${ProjectName}-batch-job
      RetentionInDays: 14
      Tags:
        - Key: Name
          Value: !Sub /aws/batch/${ProjectName}-batch-job
        - Key: ProjectName
          Value: !Ref ProjectName
Outputs:
  BatchComputeEnvironmentEc2IntelSpot:
    Value: !Ref BatchComputeEnvironmentEc2IntelSpot
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-BatchComputeEnvironmentEc2IntelSpot
  BatchJobQueueEc2IntelSpot:
    Value: !Ref BatchJobQueueEc2IntelSpot
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-BatchJobQueueEc2IntelSpot
  BatchComputeEnvironmentEc2IntelOnDemand:
    Value: !Ref BatchComputeEnvironmentEc2IntelOnDemand
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-BatchComputeEnvironmentEc2IntelOnDemand
  BatchJobQueueEc2IntelOnDemand:
    Value: !Ref BatchJobQueueEc2IntelOnDemand
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-BatchJobQueueEc2IntelOnDemand
  BatchLogGroup:
    Value: !Ref BatchLogGroup
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-BatchLogGroup
